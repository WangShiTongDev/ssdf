@using DevTeamUp.BLL.DTOs;
<h1>
    Укажите свои данные
</h1>


<form asp-action="ProfileInit" id="profileInitForm" method="post">
    <input type="text" value="" placeholder="first name" name="firstName"/>
    <input type="text" value="" placeholder="last name" name="lastName"/>

    <div class="form-gorup">
        <label>about yourself</label>
        <textarea action="about">

        </textarea>
    </div>

    <div class="form-group">
        <div class="source">
            @foreach (var item in ViewBag.availableSkills as IList<SkillDTO>)
            {
                <div data-id="@item.Id" class="listItem">@item.Name</div>
            }
        </div>
        <hr />
        <div class="selected">

        </div>
        <div class="hiddenInputs">

        </div>
    </div>

    <input type="submit" value="next" />
</form>


@section Scripts {


    <script>

        class SwitchListItems{

            #sourceContainer;
            #selectedContainer;
            #itemClassName = ".listItem"

            constructor(sourceContainer, selectedContainer){
                this.#sourceContainer = sourceContainer;
                this.#selectedContainer = selectedContainer;
                
                console.log(this.#selectedContainer);
                console.log(this.#sourceContainer);
                
                this.#init();
            }

            #init(){
                document.querySelectorAll(this.#itemClassName).forEach( i => {
                    
                    i.addEventListener('click', e => { this.#toggleSelection(i); })
                })
            }

            #toggleSelection(element){
                console.log(element.parentNode);
                if (element.parentNode === this.#sourceContainer) {
                    this.#sourceContainer.removeChild(element);
                    this.#selectedContainer.appendChild(element);

                } else if (element.parentNode === this.#selectedContainer) {
                    this.#selectedContainer.removeChild(element);
                    this.#sourceContainer.appendChild(element);
                }
            }

            createHiddenInputs(name){
                return Array.from (this.#selectedContainer.querySelectorAll(this.#itemClassName))
                .map( item => {
                    return $(` <input type="hidden" name="${name}" value="${item.dataset.id}">`)[0];
                });
            }
        }
        
        let source = document.querySelector('.source');
        let selected = document.querySelector('.selected')
        let test = new SwitchListItems(source, selected);

        let form = document.querySelector('#profileInitForm');

        form.addEventListener('submit', e =>{
            
            let hiddenInputsContainer = document.querySelector('.hiddenInputs');
            hiddenInputsContainer.innerHTML = '';

            let hiddeInputs = test.createHiddenInputs('technologies');
            hiddeInputs.forEach(i => $(hiddenInputsContainer).append(i));

        })

    </script>
}